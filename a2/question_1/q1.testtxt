SAMPLE TEST DOCUMENTATION
=========================
The program plays the hot potato game which takes in a number of players
between 2-20 and an optional seed. The game consists of sets
and each set starts with an Umpire tossing a potato to a player
which decrements a counter in the Potato. The potato is then
tossed among players until the counter runs out and that player is eliminated.

A new set begins and continues the same way. The game ends when there is one
player left.

USER INTERFACE TESTING
This tests the command line parameters and appropraite output messages.

Here is the script-fixed log of the testing performed.

     1  Script started on Wed 09 Oct 2013 06:23:17 PM EDT
     2  bbjunaid@linux028:~/cs343/a2$ ./hotpotato
     3  Usage: ./hotpotato players  [ seed ]
     4   players [2-20], seed >= 0
     5  bbjunaid@linux028:~/cs343/a2$ ./hotpotato 1
     6  Incorrect input for number of players.
     7  Usage: ./hotpotato players  [ seed ]
     8   players [2-20], seed >= 0
     9  bbjunaid@linux028:~/cs343/a2$ ./hotpotato 24
    10  Incorrect input for number of players.
    11  Usage: ./hotpotato players  [ seed ]
    12   players [2-20], seed >= 0
    13  bbjunaid@linux028:~/cs343/a2$ ./hotpotato -3
    14  Incorrect input for number of players.
    15  Usage: ./hotpotato players  [ seed ]
    16   players [2-20], seed >= 0
    17  bbjunaid@linux028:~/cs343/a2$ ./hotpotato -2
    18  Incorrect input for number of players.
    19  Usage: ./hotpotato players  [ seed ]
    20   players [2-20], seed >= 0
    21  bbjunaid@linux028:~/cs343/a2$ exit
    22  exit
    23
    24  Script done on Wed 09 Oct 2013 06:24:04 PM EDT

  TEST 1: No parameters
  -------
    Line 2 shows the program run with no parameters, and lines 3-4 show the usage
    output specifying invalid parameters.

  TEST 2: Invalid number of players
  -------
    Lines 5, 8, and 13 show invalid input for the number of players. The number
    cannot be less than 2, or greater than 20. The 2 lines following lines 5, 8,
    and 13 show the usage of the script signifying that this input was not
    acceptable.

  TEST 3: Invalid seed value 
  -------
    Line 17 tests an invalid seed value which is a value below 0 as srand( seed )
    accepts an unsigned int for the seed. Thus a value of -2 results in a 
    usage error message.

ALGORITHM TESTING
The best way to test the algorithm is to specify the same number of players
and seed as the executable provided, and ensure that the same sequency of 
events happen. This includes comparing: (1) number of ticks after which the potato will
go off in each set, (2) the player eliminated in each set, and (3) the winner
of the game. The algorithm is tested by comparing with 2 sets of player, seed
combinations.

  TEST 1: 
  -------
    DATA DESCRIPTION
    The input parameters are players = 10, seed = 10.  

    TESTING
    Here is the script-fixed log of the testing performed with line numbers
    attached.

         1  Script started on Wed 09 Oct 2013 06:32:33 PM EDT
         2  bbjunaid@linux028:~/cs343/a2$ ./hotpotato_64 10 10
         3  10 players in the match
         4    POTATO will go off after 6 tosses
         5  Set 1:  U -> 8 -> 5 -> 8 -> 7 -> 5 -> 1 is eliminated
         6    POTATO will go off after 8 tosses
         7  Set 2:  U -> 6 -> 3 -> 0 -> 3 -> 2 -> 7 -> 8 -> 9 is eliminated
         8    POTATO will go off after 9 tosses
         9  Set 3:  U -> 5 -> 0 -> 4 -> 6 -> 3 -> 5 -> 0 -> 4 -> 0 is eliminated
        10    POTATO will go off after 7 tosses
        11  Set 4:  U -> 2 -> 4 -> 3 -> 6 -> 2 -> 3 -> 5 is eliminated
        12    POTATO will go off after 6 tosses
        13  Set 5:  U -> 6 -> 4 -> 3 -> 4 -> 3 -> 8 is eliminated
        14    POTATO will go off after 8 tosses
        15  Set 6:  U -> 3 -> 6 -> 2 -> 4 -> 6 -> 2 -> 3 -> 4 is eliminated
        16    POTATO will go off after 4 tosses
        17  Set 7:  U -> 3 -> 2 -> 6 -> 2 is eliminated
        18    POTATO will go off after 1 toss
        19  Set 8:  U -> 7 is eliminated
        20    POTATO will go off after 8 tosses
        21  Set 9:  U -> 3 -> 6 -> 3 -> 6 -> 3 -> 6 -> 3 -> 6 is eliminated
        22  3 wins the Match!
        23  bbjunaid@linux028:~/cs343/a2$ ./hotpotato 10 10
        24  10 players in the match
        25    POTATO will go off after 6 tosses
        26  Set 1:  U -> 8 -> 5 -> 8 -> 7 -> 5 -> 1 is eliminated
        27    POTATO will go off after 8 tosses
        28  Set 2:  U -> 6 -> 3 -> 0 -> 3 -> 2 -> 7 -> 8 -> 9 is eliminated
        29    POTATO will go off after 9 tosses
        30  Set 3:  U -> 5 -> 0 -> 4 -> 6 -> 3 -> 5 -> 0 -> 4 -> 0 is eliminated
        31    POTATO will go off after 7 tosses
        32  Set 4:  U -> 2 -> 4 -> 3 -> 6 -> 2 -> 3 -> 5 is eliminated
        33    POTATO will go off after 6 tosses
        34  Set 5:  U -> 6 -> 4 -> 3 -> 4 -> 3 -> 8 is eliminated
        35    POTATO will go off after 8 tosses
        36  Set 6:  U -> 3 -> 6 -> 2 -> 4 -> 6 -> 2 -> 3 -> 4 is eliminated
        37    POTATO will go off after 4 tosses
        38  Set 7:  U -> 3 -> 2 -> 6 -> 2 is eliminated
        39    POTATO will go off after 1 tosses
        40  Set 8:  U -> 7 is eliminated
        41    POTATO will go off after 8 tosses
        42  Set 9:  U -> 3 -> 6 -> 3 -> 6 -> 3 -> 6 -> 3 -> 6 is eliminated
        43  3 wins the Match!
        44  bbjunaid@linux028:~/cs343/a2$ exit
        45  exit
        46
        47  Script done on Wed 09 Oct 2013 06:32:46 PM EDT        

    ANALYSIS
    The results from running the provided executable 'hotpotato_64' and the
    actual program 'hotpotato'.  

    Lines 4-20 show that the number of tosses for the potato in 'hotpotato_64' are
    (6, 8, 9, 7, 6, 8, 4, 1, 8). This matches with the number of tosses in
    'hotpotato' which is on lines 25-41.

    Lines 4-22 also show the sequence of player eliminations in 'hotpotato_64' as:
    (1, 9, 0, 5, 8, 4, 2, 7, 6) with the winner as 3.

    Lines 24-43 also show the sequence of player eliminations in 'hotpotato' as:
    (1, 9, 0, 5, 8, 4, 2, 7, 6) with the winner as 3.

    From this, we can say that the algorithms for the Player, Umpire, and Potato
    objects are the same, and the game is player in the exact same manner.
    
  TEST 2: 
  -------
    DATA DESCRIPTION
    The input parameters are players = 7, seed = 30.  

    TESTING
    Here is the script-fixed log of the testing performed with line numbers
    attached.

         1  Script started on Wed 09 Oct 2013 08:01:16 PM EDT
         2  bbjunaid@linux028:~/cs343/a2$ ./hotpotato_64 7 30
         3  7 players in the match
         4    POTATO will go off after 4 tosses
         5  Set 1:  U -> 1 -> 3 -> 1 -> 5 is eliminated
         6    POTATO will go off after 5 tosses
         7  Set 2:  U -> 2 -> 0 -> 2 -> 6 -> 0 is eliminated
         8    POTATO will go off after 10 tosses
         9  Set 3:  U -> 1 -> 6 -> 2 -> 1 -> 4 -> 3 -> 6 -> 3 -> 6 -> 3 is eliminated
        10    POTATO will go off after 8 tosses
        11  Set 4:  U -> 2 -> 6 -> 2 -> 1 -> 4 -> 6 -> 2 -> 6 is eliminated
        12    POTATO will go off after 8 tosses
        13  Set 5:  U -> 1 -> 4 -> 1 -> 2 -> 1 -> 4 -> 1 -> 2 is eliminated
        14    POTATO will go off after 4 tosses
        15  Set 6:  U -> 1 -> 4 -> 1 -> 4 is eliminated
        16  1 wins the Match!
        17  bbjunaid@linux028:~/cs343/a2$ ./hotpotato 7 30
        18  7 players in the match
        19    POTATO will go off after 4 tosses
        20  Set 1:  U -> 1 -> 3 -> 1 -> 5 is eliminated
        21    POTATO will go off after 5 tosses
        22  Set 2:  U -> 2 -> 0 -> 2 -> 6 -> 0 is eliminated
        23    POTATO will go off after 10 tosses
        24  Set 3:  U -> 1 -> 6 -> 2 -> 1 -> 4 -> 3 -> 6 -> 3 -> 6 -> 3 is eliminated
        25    POTATO will go off after 8 tosses
        26  Set 4:  U -> 2 -> 6 -> 2 -> 1 -> 4 -> 6 -> 2 -> 6 is eliminated
        27    POTATO will go off after 8 tosses
        28  Set 5:  U -> 1 -> 4 -> 1 -> 2 -> 1 -> 4 -> 1 -> 2 is eliminated
        29    POTATO will go off after 4 tosses
        30  Set 6:  U -> 1 -> 4 -> 1 -> 4 is eliminated
        31  1 wins the Match!
        32  bbjunaid@linux028:~/cs343/a2$ exit
        33  exit
        34
        35  Script done on Wed 09 Oct 2013 08:01:33 PM EDT

    ANALYSIS
    From analyzing lines 3-16 corresponding to output of 'hotpotato_64' and
    lines 18-31 corresponding to output of 'hotpotato', it is evident that
    the nubmer of tosses for each set and the player eliminated in each set
    are the same. 

    Lines 16 and 31 show that player 1 wins in the end which verifies that
    the programs have identical algorithms.
